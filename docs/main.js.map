{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/abstract/abstract-table.component.ts","./src/app/components/general/controls/searchbar.component.ts","./src/app/components/general/controls/searchbar.component.html","./src/app/components/general/controls/selector.component.ts","./src/app/components/general/controls/selector.component.html","./src/app/components/general/layout/async-source.component.html","./src/app/components/general/layout/async-source.component.ts","./src/app/components/general/layout/card.component.ts","./src/app/components/general/layout/card.component.html","./src/app/components/general/layout/console.component.ts","./src/app/components/general/layout/console.component.html","./src/app/components/side-nav/link-card.component.ts","./src/app/components/side-nav/link-card.component.html","./src/app/components/table/base-table.component.ts","./src/app/components/table/user/user.table.ts","./src/app/components/table/user/user.table.html","./src/app/dialogs/confirm/confirm.dialog.ts","./src/app/dialogs/confirm/confirm.dialog.html","./src/app/dialogs/dynamic/dynamic.dialog.ts","./src/app/dialogs/dynamic/dynamic.dialog.html","./src/app/directives/dynamic-component-loader.directive.ts","./src/app/directives/index.ts","./src/app/forms/index.ts","./src/app/forms/user.form.ts","./src/app/forms/user.form.html","./src/app/material.module.ts","./src/app/models/api/base/entity.ts","./src/app/models/api/base/index.ts","./src/app/models/api/index.ts","./src/app/models/api/user.ts","./src/app/models/consts/demos.ts","./src/app/models/consts/forms/address-form.ts","./src/app/models/consts/forms/company-form.ts","./src/app/models/consts/forms/entity-form.ts","./src/app/models/consts/forms/geo-form.ts","./src/app/models/consts/forms/index.ts","./src/app/models/consts/forms/user-form.ts","./src/app/models/consts/index.ts","./src/app/models/demo.ts","./src/app/models/enums/component-suffixes.ts","./src/app/models/enums/index.ts","./src/app/models/index.ts","./src/app/models/interfaces/api/IAddress.ts","./src/app/models/interfaces/api/ICompany.ts","./src/app/models/interfaces/api/IEntity.ts","./src/app/models/interfaces/api/IGeo.ts","./src/app/models/interfaces/api/IUser.ts","./src/app/models/interfaces/api/index.ts","./src/app/models/interfaces/idynamic-component-loader.ts","./src/app/models/interfaces/idynamic-dialog-data.ts","./src/app/models/interfaces/index.ts","./src/app/models/query/core-query.ts","./src/app/models/query/index.ts","./src/app/models/query/query-result.ts","./src/app/models/query/query-source.ts","./src/app/models/storage/index.ts","./src/app/models/storage/istorage.ts","./src/app/models/storage/local-storage.ts","./src/app/models/storage/session-storage.ts","./src/app/models/validation/index.ts","./src/app/models/validation/validation-result.ts","./src/app/pipes/component-name.pipe.ts","./src/app/routes/dynamic-component-loader/dynamic-component-loader.route.ts","./src/app/routes/dynamic-component-loader/dynamic-component-loader.route.html","./src/app/routes/dynamic-component-loader/index.ts","./src/app/routes/home/home.route.ts","./src/app/routes/home/home.route.html","./src/app/routes/home/index.ts","./src/app/routes/index.ts","./src/app/services/api/base/base.api.ts","./src/app/services/api/base/entity.api.ts","./src/app/services/api/base/index.ts","./src/app/services/api/index.ts","./src/app/services/api/user.api.ts","./src/app/services/core/api-validator.service.ts","./src/app/services/core/core.service.ts","./src/app/services/core/index.ts","./src/app/services/core/query-generator.service.ts","./src/app/services/core/snacker.service.ts","./src/app/services/core/theme.service.ts","./src/app/services/index.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ThemeService, UserApi } from './services';\r\nimport { Demo, Demos } from './models';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: 'app.component.html'\r\n})\r\nexport class AppComponent implements OnInit {\r\n    Demos: Demo[] = Demos;\r\n    constructor(\r\n        private _userApi: UserApi,\r\n        public themer: ThemeService\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this._userApi.storeAll();\r\n    }\r\n}\r\n","<section class=\"mat-typography mat-app-background app-frame\"\r\n         [ngClass]=\"themer.isLight ? 'app-light' : 'app-dark'\">\r\n    <mat-toolbar color=\"primary\"\r\n                 class=\"app-toolbar sticky-top rounded-bottom\">\r\n        <span class=\"cursor-pointer\"\r\n              routerLink=\"/\">Demos</span>\r\n        <span fxFlex></span>\r\n        <button mat-icon-button\r\n                [ngClass]=\"themer.isLight ? 'color-amber' : 'color-text'\"\r\n                (click)=\"themer.toggleTheme()\">\r\n            <mat-icon *ngIf=\"themer.isLight\">brightness_5</mat-icon>\r\n            <mat-icon *ngIf=\"!(themer.isLight)\">brightness_3</mat-icon>\r\n        </button>\r\n    </mat-toolbar>\r\n    <section class=\"app-container\">\r\n        <mat-drawer-container class=\"container\"\r\n                              autosize\r\n                              fxFlexFill>\r\n            <mat-drawer #drawer\r\n                        class=\"sidenav\"\r\n                        mode=\"side\"\r\n                        [opened]=true>\r\n                <link-card *ngFor=\"let d of Demos\"\r\n                           [name]=\"d?.name\" fxFlex></link-card>\r\n            </mat-drawer>\r\n            <router-outlet></router-outlet>\r\n        </mat-drawer-container>\r\n    </section>\r\n</section>\r\n","import {\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n} from '@angular/forms';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MaterialModule } from './material.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { Components } from './components';\r\nimport { Dialogs } from './dialogs';\r\nimport { Directives } from './directives';\r\nimport { Forms } from './forms';\r\nimport { Pipes } from './pipes';\r\n\r\nimport {\r\n  RouteComponents,\r\n  Routes\r\n} from './routes';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ...Components,\r\n    ...Dialogs,\r\n    ...Directives,\r\n    ...Forms,\r\n    ...Pipes,\r\n    ...RouteComponents\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    RouterModule.forRoot(Routes)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { LiveAnnouncer } from \"@angular/cdk/a11y\";\r\nimport { Sort } from \"@angular/material/sort\";\r\n\r\nexport abstract class AbstractTableComponent {\r\n    constructor(\r\n        private _liveAnnouncer: LiveAnnouncer\r\n    ) { }\r\n\r\n    /** Announce the change in sort state for assistive technology. */\r\n    announceSortChange = (sortState: Sort) =>\r\n        // This example uses English messages. If your application supports\r\n        // multiple language, you would internationalize these strings.\r\n        // Furthermore, you can customize the message to add additional\r\n        // details about the values being sorted.\r\n        sortState.direction\r\n            ? this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`)\r\n            : this._liveAnnouncer.announce('Sorting cleared');\r\n}\r\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    ViewChild,\r\n    ElementRef,\r\n    OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { CoreService } from '../../../services';\r\n\r\n@Component({\r\n    selector: 'searchbar',\r\n    templateUrl: 'searchbar.component.html'\r\n})\r\nexport class SearchbarComponent implements AfterViewInit, OnDestroy {\r\n    sub!: Subscription;\r\n    @ViewChild('searchbar') searchbar!: ElementRef;\r\n\r\n    @Input() label: string = 'Search';\r\n    @Input() minimum: number = 2;\r\n    @Output() search = new EventEmitter<string>();\r\n    @Output() clear = new EventEmitter();\r\n\r\n    constructor(\r\n        private core: CoreService\r\n    ) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.sub = this.core.generateInputObservable(this.searchbar)\r\n            .subscribe((val: string) => {\r\n                val && val.length >= this.minimum\r\n                    ? this.search.emit(val)\r\n                    : this.clear.emit();\r\n            });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub.unsubscribe();\r\n    }\r\n}\r\n","<section fxLayout=\"column\"\r\n         fxLayoutAlign=\"start stretch\">\r\n    <mat-form-field>\r\n        <mat-label>{{label}}</mat-label>\r\n        <input #searchbar\r\n               matInput>\r\n    </mat-form-field>\r\n</section>\r\n","import {\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    Output,\r\n    SimpleChanges\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'selector',\r\n    templateUrl: 'selector.component.html'\r\n})\r\nexport class SelectorComponent<T> implements OnChanges {\r\n    @Input() data: T;\r\n    @Input() selected: boolean = false;\r\n    @Output() select = new EventEmitter<T>();\r\n\r\n    private baseOptions = 'background-card rounded cursor-pointer';\r\n    private deselectedOptions = `${this.baseOptions} card-outline-divider`;\r\n    private selectedOptions = `${this.baseOptions} card-outline-primary`;\r\n\r\n    options = this.deselectedOptions;\r\n    selectedIcon = 'radio_button_unchecked';\r\n\r\n    private updateSelected = () => {\r\n        if (this.selected) {\r\n            this.options = this.selectedOptions;\r\n            this.selectedIcon = 'radio_button_checked';\r\n        } else {\r\n            this.options = this.deselectedOptions;\r\n            this.selectedIcon = 'radio_button_unchecked';\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.selected)\r\n            this.updateSelected();\r\n    }\r\n}","<card layout=\"row\"\r\n      alignment=\"space-between center\"\r\n      width=\"auto\"\r\n      [options]=\"options\"\r\n      (click)=\"select.emit(data)\">\r\n    <ng-content></ng-content>\r\n    <section fxLayout=\"column\"\r\n             fxLayoutAlign=\"center center\"\r\n             class=\"background-default rounded-right p4\">\r\n        <mat-icon class=\"m4\"\r\n                  [ngClass]=\"selected ? 'color-primary' : 'color-default'\">{{selectedIcon}}</mat-icon>\r\n    </section>\r\n</card>","<ng-template #loading>\r\n    <mat-progress-bar mode=\"indeterminate\"\r\n                      color=\"accent\"></mat-progress-bar>\r\n</ng-template>\r\n<ng-container *ngIf=\"src.result$ | async as query else loading\">\r\n    <section class=\"p8\"\r\n             [fxLayout]=\"inlineControls ? 'row | wrap' : 'column'\"\r\n             [fxLayoutAlign]=\"inlineControls ? 'start center' : 'start stretch'\">\r\n        <searchbar fxFlex\r\n                   [label]=\"searchLabel\"\r\n                   [minimum]=\"searchMin\"\r\n                   (search)=\"src.onSearch($event)\"\r\n                   (clear)=\"src.onSearch('')\"></searchbar>\r\n        <mat-paginator [class]=\"pageStyle\"\r\n                       [length]=\"query?.totalCount\"\r\n                       [pageSize]=\"query?.pageSize\"\r\n                       [pageSizeOptions]=\"src.pageSizeOptions\"\r\n                       [pageIndex]=\"query?.page - 1\"\r\n                       (page)=\"src.onPage($event)\"></mat-paginator>\r\n    </section>\r\n    <section *ngIf=\"query.data?.length > 0\"\r\n             [fxLayout]=\"layout\"\r\n             [fxLayoutAlign]=\"alignment\"\r\n             class=\"p8\">\r\n        <ng-content></ng-content>\r\n    </section>\r\n    <p *ngIf=\"!(query?.data?.length > 0)\"\r\n       class=\"mat-subheading-2 mx12 my4\">{{emptyLabel}}</p>\r\n</ng-container>\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\nimport { QuerySource } from '../../../models';\r\n\r\n@Component({\r\n    selector: 'async-source',\r\n    templateUrl: 'async-source.component.html'\r\n})\r\nexport class AsyncSourceComponent<T> {\r\n    @Input() src: QuerySource<T>;\r\n    @Input() inlineControls = true;\r\n    @Input() searchLabel = 'Search';\r\n    @Input() searchMin = 1;\r\n    @Input() emptyLabel = 'No Data Available';\r\n    @Input() layout = 'row | wrap';\r\n    @Input() alignment = 'start start';\r\n    @Input() pageStyle: string;\r\n}\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'card',\r\n    templateUrl: 'card.component.html'\r\n})\r\nexport class CardComponent {\r\n    @Input() width: number | string = 'auto';\r\n    @Input() minWidth: number = 320;\r\n    @Input() maxWidth: number = 420;\r\n    @Input() layout = 'column';\r\n    @Input() alignment = 'start stretch';\r\n    @Input() options = 'card-outline-divider rounded';\r\n    @Input() padding: number = 0;\r\n    @Input() margin: number = 4;\r\n}\r\n","<section [fxLayout]=\"layout\"\r\n         [fxLayoutAlign]=\"alignment\"\r\n         [class]=\"options\"\r\n         [style.width.px]=\"width\"\r\n         [style.minWidth.px]=\"minWidth\"\r\n         [style.maxWidth.px]=\"maxWidth\"\r\n         [style.padding.px]=\"padding\"\r\n         [style.margin.px]=\"margin\">\r\n    <ng-content></ng-content>\r\n</section>\r\n","import {\r\n    AfterViewChecked,\r\n    Component,\r\n    ElementRef,\r\n    Input,\r\n    ViewChild\r\n} from '@angular/core';\r\n\r\ninterface ConsoleMessage {\r\n    message: string;\r\n    isError: boolean;\r\n}\r\n\r\n@Component({\r\n    selector: 'console',\r\n    templateUrl: 'console.component.html',\r\n    styleUrls: ['console.component.scss']\r\n})\r\nexport class ConsoleComponent implements AfterViewChecked {\r\n    @Input() height: number = 250;\r\n    @Input() expanded: boolean = true;\r\n    @Input() consoleStyle: string = 'p8';\r\n    @Input() messageStyle: string = 'm4';\r\n    @Input() messages: ConsoleMessage[] = new Array<ConsoleMessage>();\r\n\r\n    @ViewChild('console') console: ElementRef;\r\n\r\n    private scrollConsole = () => {\r\n        if (this.console?.nativeElement) {\r\n            this.console.nativeElement.scrollTop = this.console.nativeElement.scrollHeight + 100;\r\n        }\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n        this.scrollConsole();\r\n    }\r\n\r\n    toggleExpanded = () => this.expanded = !this.expanded;\r\n}\r\n","<section fxLayout=\"column\"\r\n         fxLayoutAlign=\"start stretch\"\r\n         class=\"m4 card-outline-divider rounded\">\r\n    <section fxLayout=\"row\"\r\n             fxLayoutAlign=\"space-between center\">\r\n        <p class=\"m8\">Console</p>\r\n        <button mat-icon-button\r\n                class=\"m8\"\r\n                (click)=\"toggleExpanded()\">\r\n            <mat-icon>{{expanded ? 'keyboard_arrow_down' : 'keyboard_arrow_up'}}</mat-icon>\r\n        </button>\r\n    </section>\r\n    <mat-divider *ngIf=\"expanded\"></mat-divider>\r\n    <section class=\"console\"\r\n             [ngClass]=\"consoleStyle\"\r\n             #console\r\n             [style.height.px]=\"height\"\r\n             *ngIf=\"expanded\">\r\n        <ng-container *ngIf=\"messages?.length > 0\">\r\n            <pre *ngFor=\"let message of messages\"\r\n                 class=\"m4\"\r\n                 [ngClass]=\"message.isError ? 'color-red' : 'color-default'\">{{message.message}}</pre>\r\n        </ng-container>\r\n        <pre *ngIf=\"!(messages?.length > 0)\"\r\n             class=\"m4 bold\">No Output Available</pre>\r\n    </section>\r\n</section>\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'link-card',\r\n    templateUrl: 'link-card.component.html'\r\n})\r\nexport class LinkCardComponent {\r\n    @Input() name: string;\r\n}\r\n","<mat-card [style.borderRadius]=\"0\"\r\n          fxLayoutAlign=\"center center\"\r\n          [routerLink]=\"['/', name]\">{{name}}</mat-card>\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { AfterViewInit, Component, EventEmitter, Inject, InjectionToken, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Subscription } from 'rxjs';\r\nimport { Entity } from 'src/app/models';\r\nimport { BaseApi } from 'src/app/services';\r\nimport { AbstractTableComponent } from '../abstract/abstract-table.component';\r\n\r\n@Component({\r\n    selector: 'base-table',\r\n    templateUrl: 'base-table.component.html'\r\n})\r\nexport class BaseTableComponent<T extends Entity, S extends BaseApi<T>>\r\n    extends AbstractTableComponent implements AfterViewInit, OnInit, OnDestroy {\r\n\r\n    @Output() protected edit = new EventEmitter();\r\n\r\n    @ViewChild(MatPaginator) protected paginator: MatPaginator;\r\n    @ViewChild(MatSort) protected sort: MatSort;\r\n\r\n    private sub: Subscription;\r\n\r\n    dataSource: MatTableDataSource<T> = new MatTableDataSource<T>();\r\n\r\n    constructor(\r\n        liveAnnouncer: LiveAnnouncer,\r\n        @Inject(new InjectionToken('api')) protected api: S\r\n    ) {\r\n        super(liveAnnouncer);\r\n    }\r\n\r\n    async ngOnInit(): Promise<void> {\r\n        this.sub = this.api.entities$\r\n            .subscribe(x => this.dataSource.data = x);\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.dataSource.sort = this.sort;\r\n        this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.sub.unsubscribe();\r\n    }\r\n\r\n    applyFilter = (event: Event): void => {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n        if (this.dataSource?.paginator) {\r\n            this.dataSource?.paginator?.firstPage();\r\n        }\r\n    }\r\n}\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component } from '@angular/core';\r\nimport { User } from 'src/app/models';\r\nimport { UserApi } from 'src/app/services';\r\nimport { BaseTableComponent } from '../base-table.component';\r\n\r\n@Component({\r\n    selector: 'user-table',\r\n    templateUrl: 'user.table.html'\r\n})\r\nexport class UserTable\r\n    extends BaseTableComponent<User, UserApi> {\r\n\r\n    displayedColumns: string[] = ['position', 'name', 'email', 'actions'];\r\n\r\n    constructor(\r\n        liveAnnouncer: LiveAnnouncer,\r\n        userApi: UserApi\r\n    ) {\r\n        super(liveAnnouncer, userApi);\r\n    }\r\n}\r\n","<div class=\"mat-elevation-z8 p8\"\r\n     fxLayout=\"column\"\r\n     fxLayoutAlign=\"start stretch\">\r\n    <section fxFlex>\r\n        <mat-form-field appearance=\"standard\"\r\n                        fxFlex>\r\n            <mat-label>Filter</mat-label>\r\n            <input matInput\r\n                   (keyup)=\"applyFilter($event)\"\r\n                   placeholder=\"Ex. Mia\"\r\n                   fxFlex\r\n                   #input>\r\n        </mat-form-field>\r\n\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 25, 100]\"\r\n                       aria-label=\"Select page of users\"></mat-paginator>\r\n    </section>\r\n    <table mat-table\r\n           matSort\r\n           [dataSource]=\"dataSource\"\r\n           (matSortChange)=\"announceSortChange($event)\"\r\n           class=\"min-full-width\">\r\n\r\n        <ng-container matColumnDef=\"position\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef> id </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let el\"> {{el.id}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                mat-sort-header> name </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let el\"> {{el.name}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"email\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                mat-sort-header> email </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let el\"> {{el.email}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"actions\">\r\n            <th mat-header-cell\r\n                *matHeaderCellDef\r\n                [style.textAlign]=\"'right'\"> actions </th>\r\n            <td mat-cell\r\n                *matCellDef=\"let el\"\r\n                mat-icon-button\r\n                [style.textAlign]=\"'right'\">\r\n                <mat-icon class=\"scale-75\"\r\n                          (click)=\"edit.emit(el)\">edit</mat-icon>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row\r\n            *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n        <!-- Row shown when there is no matching data. -->\r\n        <tr class=\"mat-row\"\r\n            *matNoDataRow>\r\n            <td class=\"mat-cell\"\r\n                colspan=\"4\">No data matching the filter \"{{input.value}}\"</td>\r\n        </tr>\r\n    </table>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Inject\r\n} from '@angular/core';\r\n\r\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'confirm-dialog',\r\n  templateUrl: 'confirm.dialog.html'\r\n})\r\nexport class ConfirmDialog implements OnInit {\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string }\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.data) {\r\n      this.data.title = this.data.title\r\n        ? this.data.title\r\n        : 'Confirm Action?';\r\n\r\n      this.data.content = this.data.content\r\n        ? this.data.content\r\n        : 'Are you sure you would like to perform this action?';\r\n    } else {\r\n      this.data = {\r\n        title: 'Confirm Action?',\r\n        content: 'Are you sure you would like to perform this action?'\r\n      };\r\n    }\r\n  }\r\n}\r\n","<div class=\"mat-typography\">\r\n  <h2 mat-dialog-title>{{data?.title}}</h2>\r\n  <mat-dialog-content>\r\n    <p>{{data?.content}}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button\r\n            [mat-dialog-close]=\"false\">Cancel</button>\r\n    <button mat-button\r\n            [mat-dialog-close]=\"true\"\r\n            color=\"warn\">Confirm</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import { AfterViewInit, Component, ComponentRef, Inject, Type, ViewChild } from \"@angular/core\";\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from \"@angular/material/dialog\";\r\nimport { Entity, IDynamicLoaderComponent } from \"src/app/models\";\r\nimport { DynamicComponentLoaderDirective } from \"src/app/directives\";\r\nimport { BaseApi, UserApi } from \"src/app/services\";\r\n\r\n@Component({\r\n    selector: 'dynamic-dialog',\r\n    templateUrl: 'dynamic.dialog.html'\r\n})\r\nexport class DynamicDialog<T extends Entity, S extends BaseApi<T>> implements AfterViewInit {\r\n    @ViewChild(DynamicComponentLoaderDirective) outlet!: DynamicComponentLoaderDirective\r\n\r\n    outletRef: ComponentRef<IDynamicLoaderComponent>;\r\n\r\n    constructor(\r\n        private _dialogRef: MatDialogRef<DynamicDialog<T,S>>,\r\n        @Inject(MAT_DIALOG_DATA) public data: {\r\n            component: Type<IDynamicLoaderComponent>,\r\n            inputData: any,\r\n            dataSvc: S\r\n        }\r\n    ) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        setTimeout(() => this.load(), 0);\r\n    }\r\n\r\n    load = (): void => {\r\n        this.outletRef = this.outlet?.viewContainerRef?.createComponent<IDynamicLoaderComponent>(this.data.component);\r\n\r\n        this.outletRef.instance.data = this.data?.inputData;\r\n        // this.outletRef?.changeDetectorRef?.detectChanges();\r\n    }\r\n\r\n    save = async () => {\r\n        const res = await this.data.dataSvc.save(this.outletRef?.instance?.return);\r\n        res && this._dialogRef.close(res);\r\n    }\r\n}\r\n","<div class=\"mat-typography\">\r\n    <h2 mat-dialog-title>{{data?.component?.name | componentName}}</h2>\r\n    <mat-dialog-content>\r\n        <ng-template loaderOutlet></ng-template>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions>\r\n        <button class=\"color-green\"\r\n                mat-stroked-button\r\n                (click)=\"save()\">Save</button>\r\n        <button mat-stroked-button\r\n                [mat-dialog-close]=\"false\">Cancel</button>\r\n    </mat-dialog-actions>\r\n</div>\r\n","import {\r\n    Directive,\r\n    ViewContainerRef\r\n} from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[loaderOutlet]'\r\n})\r\nexport class DynamicComponentLoaderDirective {\r\n    constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n","import { DynamicComponentLoaderDirective } from './dynamic-component-loader.directive';\r\n\r\nexport const Directives = [\r\n    DynamicComponentLoaderDirective\r\n];\r\n\r\nexport * from './dynamic-component-loader.directive';\r\n","import { UserForm } from './user.form';\r\n\r\nexport const Forms = [\r\n    UserForm\r\n];\r\n\r\nexport * from './user.form';\r\n","import { Component } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { IDynamicLoaderComponent } from '../models';\r\n\r\n@Component({\r\n    selector: 'user-form',\r\n    templateUrl: 'user.form.html'\r\n})\r\nexport class UserForm implements IDynamicLoaderComponent {\r\n    private _form: FormGroup;\r\n    get form() { return this._form; }\r\n\r\n    set data(data: FormGroup) { this._form = data; }\r\n    get return() { return this._form?.value; }\r\n}\r\n","<form [formGroup]=\"form\">\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>name</mat-label>\r\n        <input matInput\r\n               formControlName=\"name\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>username</mat-label>\r\n        <input matInput\r\n               formControlName=\"username\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>email</mat-label>\r\n        <input matInput\r\n               formControlName=\"email\">\r\n    </mat-form-field>\r\n    <ng-container formGroupName=\"address\">\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>street</mat-label>\r\n            <input matInput\r\n                   formControlName=\"street\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>suite</mat-label>\r\n            <input matInput\r\n                   formControlName=\"suite\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>city</mat-label>\r\n            <input matInput\r\n                   formControlName=\"city\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>zipcode</mat-label>\r\n            <input matInput\r\n                   formControlName=\"zipcode\">\r\n        </mat-form-field>\r\n        <ng-container formGroupName=\"geo\">\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>lat</mat-label>\r\n                <input matInput\r\n                       formControlName=\"lat\">\r\n            </mat-form-field>\r\n            <mat-form-field appearance=\"fill\">\r\n                <mat-label>lng</mat-label>\r\n                <input matInput\r\n                       formControlName=\"lng\">\r\n            </mat-form-field>\r\n        </ng-container>\r\n    </ng-container>\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>phone</mat-label>\r\n        <input matInput\r\n               formControlName=\"phone\">\r\n    </mat-form-field>\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>website</mat-label>\r\n        <input matInput\r\n               formControlName=\"website\">\r\n    </mat-form-field>\r\n    <ng-container formGroupName=\"company\">\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>name</mat-label>\r\n            <input matInput\r\n                   formControlName=\"name\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>catchPhrase</mat-label>\r\n            <input matInput\r\n                   formControlName=\"catchPhrase\">\r\n        </mat-form-field>\r\n        <mat-form-field appearance=\"fill\">\r\n            <mat-label>bs</mat-label>\r\n            <input matInput\r\n                   formControlName=\"bs\">\r\n        </mat-form-field>\r\n    </ng-container>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n    MatCommonModule,\r\n    MatLineModule,\r\n    MatOptionModule,\r\n    MatPseudoCheckboxModule,\r\n    MatRippleModule\r\n} from '@angular/material/core';\r\n\r\nimport {\r\n    FlexLayoutModule,\r\n    GridModule\r\n} from '@angular/flex-layout';\r\n\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\n@NgModule({\r\n    exports: [\r\n        ClipboardModule,\r\n        DragDropModule,\r\n        FlexLayoutModule,\r\n        GridModule,\r\n        MatBadgeModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatCommonModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatLineModule,\r\n        MatMenuModule,\r\n        MatOptionModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatPseudoCheckboxModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSidenavModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule\r\n    ]\r\n})\r\nexport class MaterialModule { }\r\n","import { IEntity } from \"../../interfaces\";\r\n\r\nexport abstract class Entity implements IEntity {\r\n    private _id: number;\r\n\r\n    constructor(id: number) {\r\n        this._id = id;\r\n    }\r\n\r\n    public get id() { return this._id; }\r\n}\r\n","export * from './entity';","export * from './user';\r\n\r\nexport * from './base';\r\n","import { IAddress, ICompany, IUser } from \"../interfaces\";\r\nimport { Entity } from \"./base\";\r\n\r\nexport class User extends Entity implements IUser {\r\n    private _name: string;\r\n    private _username: string;\r\n    private _email: string;\r\n    private _address: IAddress;\r\n    private _phone: string;\r\n    private _website: string;\r\n    private _company: ICompany;\r\n\r\n    constructor(user: IUser) {\r\n        super(user?.id ?? 0);\r\n        this._name = user.name;\r\n        this._username = user.username;\r\n        this._email = user.email;\r\n        this._address = user.address;\r\n        this._phone = user.phone;\r\n        this._website = user.website;\r\n        this._company = user.company;\r\n    }\r\n\r\n    public get name() { return this._name; }\r\n    public get username() { return this._username; }\r\n    public get email() { return this._email; }\r\n    public get address() { return this._address; }\r\n    public get phone() { return this._phone; }\r\n    public get website() { return this._website; }\r\n    public get company() { return this._company; }\r\n}\r\n","import { DynamicComponentLoaderRoute } from \"src/app/routes/dynamic-component-loader\";\r\nimport { Demo } from \"../demo\";\r\n\r\nexport const Demos: Demo[] = [\r\n    new Demo('dynamic-component-loader', DynamicComponentLoaderRoute)\r\n];\r\n","import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { IAddress } from \"../../interfaces\";\r\nimport { GenerateGeoForm } from \"./geo-form\";\r\n\r\nexport const GenerateAddressForm = (address: IAddress, fb: FormBuilder): FormGroup =>\r\n    fb.group({\r\n        street: [address?.street, Validators.required],\r\n        suite: [address?.suite, Validators.required],\r\n        city: [address?.city, Validators.required],\r\n        zipcode: [address?.zipcode, Validators.required],\r\n        geo: GenerateGeoForm(address?.geo, fb)\r\n    });\r\n","import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ICompany } from \"../../interfaces\";\r\n\r\nexport const GenerateCompanyForm = (company: ICompany, fb: FormBuilder): FormGroup =>\r\n    fb.group({\r\n        name: [company?.name, Validators.required],\r\n        catchPhrase: [company?.catchPhrase, Validators.required],\r\n        bs: [company?.bs, Validators.required],\r\n    });\r\n","import { FormBuilder, FormGroup } from \"@angular/forms\";\r\nimport { IEntity } from \"../../interfaces\";\r\n\r\nexport const GenerateEntityForm = (e: IEntity, fb: FormBuilder): FormGroup =>\r\n    fb.group({\r\n        id: [e?.id]\r\n    });\r\n","import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { IGeo } from \"../../interfaces\";\r\n\r\nexport const GenerateGeoForm = (geo: IGeo, fb: FormBuilder): FormGroup =>\r\n    fb.group({\r\n        lat: [geo?.lat, Validators.required],\r\n        lng: [geo?.lng, Validators.required],\r\n    });\r\n","export * from './entity-form';\r\nexport * from './user-form';\r\n","import { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { IUser } from \"../../interfaces\";\r\nimport { GenerateAddressForm } from \"./address-form\";\r\nimport { GenerateCompanyForm } from \"./company-form\";\r\nimport { GenerateEntityForm } from \"./entity-form\";\r\n\r\nexport const GenerateUserForm = (user: IUser, fb: FormBuilder): FormGroup =>\r\n    fb.group({\r\n        ...GenerateEntityForm(user, fb).controls,\r\n        name: [user?.name, Validators.required],\r\n        username: [user?.username, Validators.required],\r\n        email: [user?.email, Validators.required],\r\n        address: GenerateAddressForm(user?.address, fb),\r\n        phone: [user?.phone, Validators.required],\r\n        website: [user?.website, Validators.required],\r\n        company: GenerateCompanyForm(user?.company, fb)\r\n    });\r\n","export * from \"./demos\";\r\n\r\nexport * from \"./forms\";\r\n","import { Type } from \"@angular/core\";\r\n\r\nexport class Demo {\r\n    name: string;\r\n    component: Type<any>;\r\n\r\n    constructor(\r\n        name: string,\r\n        component: Type<any>\r\n    ) {\r\n        this.name = name;\r\n        this.component = component;\r\n    }\r\n}\r\n","export enum ComponentNameSuffix {\r\n    Api = 'Api',\r\n    Component = 'Component',\r\n    Dialog = 'Dialog',\r\n    Directive = 'Directive',\r\n    Form = 'Form',\r\n    Module = 'Module',\r\n    Pipe = 'Pipe',\r\n    Route = 'Route',\r\n    Service = 'Service'\r\n}\r\n","export * from './component-suffixes';\r\n","export * from './api';\r\nexport * from './consts';\r\nexport * from './enums';\r\nexport * from './interfaces';\r\nexport * from './query';\r\nexport * from './storage';\r\nexport * from './validation';\r\n\r\nexport * from './demo';\r\n","import { IGeo } from \"./IGeo\";\r\n\r\nexport interface IAddress {\r\n    street: string;\r\n    suite: string;\r\n    city: string;\r\n    zipcode: string;\r\n    geo: IGeo;\r\n}\r\n","export interface ICompany {\r\n    name: string;\r\n    catchPhrase: string;\r\n    bs: string;\r\n}\r\n","export interface IEntity {\r\n    id: number;\r\n}\r\n","export interface IGeo {\r\n    lat: string;\r\n    lng: string;\r\n}\r\n","import { IAddress } from \"./IAddress\";\r\nimport { ICompany } from \"./ICompany\";\r\n\r\nexport interface IUser {\r\n    id: number;\r\n    name: string;\r\n    username: string;\r\n    email: string;\r\n    address: IAddress;\r\n    phone: string;\r\n    website: string;\r\n    company: ICompany;\r\n}\r\n","export * from './IAddress';\r\nexport * from './ICompany';\r\nexport * from './IEntity';\r\nexport * from './IGeo';\r\nexport * from './IUser';\r\n","export interface IDynamicLoaderComponent {\r\n    set data(data: any);\r\n    get return(); // getter\r\n}\r\n","import { Type } from \"@angular/core\";\r\nimport { BaseApi } from \"src/app/services\";\r\nimport { Entity } from \"../api\";\r\nimport { IDynamicLoaderComponent } from \"./idynamic-component-loader\";\r\n\r\nexport interface IDynamicDialogData<T extends Entity, S extends BaseApi<T>> {\r\n    component: Type<IDynamicLoaderComponent>;\r\n    inputData: T;\r\n    dataSvc: S;\r\n}\r\n","export * from './idynamic-dialog-data';\r\nexport * from './idynamic-component-loader';\r\n\r\nexport * from './api';\r\n\r\n","import {\r\n    ReplaySubject,\r\n    Subject,\r\n    Subscription,\r\n    throwError\r\n} from 'rxjs';\r\n\r\nimport {\r\n    catchError,\r\n    filter,\r\n    switchMap\r\n} from 'rxjs/operators';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { PageEvent } from '@angular/material/paginator';\r\nimport { QueryResult } from './query-result';\r\nimport { SnackerService } from '../../services';\r\n\r\nexport abstract class CoreQuery<T> {\r\n    private url = new Subject<URL>();\r\n    protected result = new ReplaySubject<QueryResult<T>>(1);\r\n    protected sub: Subscription;\r\n\r\n    private initUrl = (): Subscription =>\r\n        this.url\r\n            .pipe(\r\n                filter(url => !!url),\r\n                switchMap((url: URL) =>\r\n                    this.http.get<QueryResult<T>>(url.toString())\r\n                        .pipe(\r\n                            catchError(er => throwError(() => new Error(er)))\r\n                        )\r\n                ),\r\n                filter(r => !!r)\r\n            )\r\n            .subscribe({\r\n                next: result => this.result.next(result),\r\n                error: err => this.snacker.sendErrorMessage(err)\r\n            });\r\n\r\n    constructor(\r\n        protected readonly baseUrl: string,\r\n        protected http: HttpClient,\r\n        protected snacker: SnackerService,\r\n        protected initialPageSize: number = 20,\r\n        public pageSizeOptions: number[] = [5, 10, 20, 50, 100]\r\n    ) {\r\n        this._pageSize = initialPageSize;\r\n        this.sub = this.initUrl();\r\n    }\r\n\r\n    result$ = this.result.asObservable();\r\n    unsubscribe = () => this.sub?.unsubscribe();\r\n\r\n    protected _endpoint: string = null;\r\n    get endpoint(): string { return this._endpoint; }\r\n    set endpoint(value: string) {\r\n        const url = new URL(value, this.baseUrl);\r\n\r\n        if (this.baseUrl.startsWith(url.origin)) {\r\n            if (url.toString() !== this._endpoint) {\r\n                this._endpoint = url.toString();\r\n                this.refresh(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected _page = 1;\r\n    get page(): number { return this._page; }\r\n    set page(value: number) {\r\n        if (value !== this._page) {\r\n            this._page = value;\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    protected _pageSize: number;\r\n    get pageSize(): number { return this._pageSize; }\r\n    set pageSize(value: number) {\r\n        if (this._pageSize) {\r\n            if (value !== this._pageSize) {\r\n                this._pageSize = value;\r\n                this.refresh(true);\r\n            }\r\n        } else {\r\n            this._pageSize = value;\r\n        }\r\n    }\r\n\r\n    protected _sort: { propertyName: string, isDescending: boolean } | null = null;\r\n    get sort(): { propertyName: string, isDescending: boolean } | null {\r\n        return this._sort;\r\n    }\r\n    set sort(value: { propertyName: string, isDescending: boolean }) {\r\n        if (value !== this._sort) {\r\n            this._sort = value;\r\n            this.refresh(true);\r\n        }\r\n    }\r\n\r\n    protected _search: string | null = null;\r\n    get search(): string | null {\r\n        return this._search;\r\n    }\r\n    set search(value: string) {\r\n        if (value !== this._search) {\r\n            this._search = value;\r\n            this.refresh(true);\r\n        }\r\n    }\r\n\r\n    refresh = (repage: boolean = false) => {\r\n        const url = new URL(this.endpoint, this.baseUrl);\r\n\r\n        if (repage)\r\n            this._page = 1;\r\n\r\n        url.searchParams.set('page', this.page.toString());\r\n        url.searchParams.set('pageSize', this.pageSize.toString());\r\n\r\n        if (this.sort)\r\n            url.searchParams.set('sort', `${this.sort.propertyName}_${this.sort.isDescending ? 'desc' : 'asc'}`);\r\n        else\r\n            url.searchParams.delete('sort');\r\n\r\n        if (this.search)\r\n            url.searchParams.set('search', this.search)\r\n        else\r\n            url.searchParams.delete('search');\r\n\r\n        this.url.next(url);\r\n        this._endpoint = url.toString();\r\n    }\r\n\r\n    onPage = (pageEvent: PageEvent) => {\r\n        this.page = pageEvent.pageIndex + 1;\r\n        this.pageSize = pageEvent.pageSize;\r\n    }\r\n\r\n    onSearch = (event: string) => this.search = event;\r\n\r\n    onSort = (event: { active: string, direction: string }) => this.sort = event.direction\r\n        ? { propertyName: event.active, isDescending: event.direction === 'desc' }\r\n        : null;\r\n}\r\n","export * from './query-result';\r\nexport * from './query-source';\r\n","export interface QueryResult<T> {\r\n    page: number;\r\n    pageSize: number;\r\n    totalCount: number;\r\n    data: T[];\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { CoreQuery } from './core-query';\r\nimport { SnackerService } from '../../services';\r\n\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport class QuerySource<T> extends CoreQuery<T> {\r\n    constructor(\r\n        protected http: HttpClient,\r\n        protected snacker: SnackerService,\r\n        private api: string | null = null,\r\n        private propertyName: string = 'id',\r\n        private isDescending: boolean = false,\r\n        protected initialPageSize: number = 20,\r\n        public pageSizeOptions: number[] = [5, 10, 20, 50, 100]\r\n    ) {\r\n        super(environment.api, http, snacker, initialPageSize, pageSizeOptions);\r\n\r\n        this._sort = { propertyName, isDescending };\r\n        this.endpoint = api;\r\n    }\r\n}\r\n","export * from './istorage';\r\nexport * from './local-storage';\r\nexport * from './session-storage';\r\n","export interface IStorage<T> {\r\n    hasState: boolean;\r\n\r\n    get: () => T | null;\r\n    set: (value: T) => void;\r\n    clear: () => void;\r\n}\r\n","import { IStorage } from './istorage';\r\n\r\nexport class LocalStorage<T> implements IStorage<T> {\r\n    private key: string;\r\n\r\n    hasState = false;    \r\n\r\n    constructor(\r\n        key: string\r\n    ) {\r\n        this.key = key;\r\n        this.get();\r\n    }\r\n\r\n    get = (): T | null => {\r\n        const value = JSON.parse(localStorage.getItem(this.key)) as T;\r\n        this.hasState = !!value;\r\n        return value;\r\n    }\r\n\r\n    set = (value: T) => {\r\n        if (value) {\r\n            localStorage.setItem(this.key, JSON.stringify(value));\r\n            this.hasState = true;\r\n        } else\r\n            this.clear();\r\n    }\r\n\r\n    clear = () => {\r\n        localStorage.removeItem(this.key);\r\n        this.hasState = false;\r\n    }\r\n}\r\n","import { IStorage } from './istorage';\r\n\r\nexport class SessionStorage<T> implements IStorage<T> {\r\n    private key: string;\r\n\r\n    hasState = false;\r\n\r\n    constructor(\r\n        key: string\r\n    ) {\r\n        this.key = key;\r\n        this.get();\r\n    }\r\n\r\n    get = (): T | null => {\r\n        const value = JSON.parse(sessionStorage.getItem(this.key)) as T;\r\n        this.hasState = !!value;\r\n        return value;\r\n    }\r\n\r\n    set = (value: T) => {\r\n        if (value) {\r\n            sessionStorage.setItem(this.key, JSON.stringify(value));\r\n            this.hasState = true;\r\n        } else\r\n            this.clear();\r\n    }\r\n\r\n    clear = () => {\r\n        sessionStorage.removeItem(this.key);\r\n        this.hasState = false;\r\n    }\r\n}\r\n","export * from './validation-result';","export interface ValidationResult {\r\n    message: string;\r\n    isValid: boolean;\r\n}","import {\r\n    Pipe,\r\n    PipeTransform\r\n} from '@angular/core';\r\n\r\nimport { ComponentNameSuffix } from '../models';\r\n\r\n@Pipe({\r\n    name: 'componentName'\r\n})\r\nexport class ComponentNamePipe implements PipeTransform {\r\n    transform(name: string) {\r\n        this.removeSuffix(name);\r\n        this.split(name)\r\n\r\n        return name;\r\n    }\r\n\r\n    removeSuffix(name: string) {\r\n        if (name.includes(ComponentNameSuffix.Api)) name.replace(ComponentNameSuffix.Api, '');\r\n        else if (name.includes(ComponentNameSuffix.Component)) name.replace(ComponentNameSuffix.Component, '');\r\n        else if (name.includes(ComponentNameSuffix.Dialog)) name.replace(ComponentNameSuffix.Dialog, '');\r\n        else if (name.includes(ComponentNameSuffix.Directive)) name.replace(ComponentNameSuffix.Directive, '');\r\n        else if (name.includes(ComponentNameSuffix.Form)) name.replace(ComponentNameSuffix.Form, '');\r\n        else if (name.includes(ComponentNameSuffix.Module)) name.replace(ComponentNameSuffix.Module, '');\r\n        else if (name.includes(ComponentNameSuffix.Pipe)) name.replace(ComponentNameSuffix.Pipe, '');\r\n        else if (name.includes(ComponentNameSuffix.Route)) name.replace(ComponentNameSuffix.Route, '');\r\n        else if (name.includes(ComponentNameSuffix.Service)) name.replace(ComponentNameSuffix.Service, '');\r\n\r\n        return name;\r\n    }\r\n\r\n    checkUpper(c: string) {\r\n        return c == c.toUpperCase();\r\n    }\r\n\r\n    split(name: string) {\r\n        const letters: string[] = name.split(\"\");\r\n\r\n        letters.forEach((x: string, i: number) => {\r\n            if (this.checkUpper(x) && !!i)\r\n                letters.splice(i - 1, 0, \" \");\r\n        });\r\n\r\n        return letters.join();\r\n    }\r\n\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DynamicDialog } from 'src/app/dialogs/dynamic/dynamic.dialog';\r\nimport { UserForm } from 'src/app/forms';\r\nimport { GenerateUserForm, User } from 'src/app/models';\r\nimport { UserApi } from 'src/app/services';\r\n\r\n@Component({\r\n    selector: 'dynamic-component-loader-route',\r\n    templateUrl: 'dynamic-component-loader.route.html'\r\n})\r\nexport class DynamicComponentLoaderRoute {\r\n    constructor(\r\n        private _dialog: MatDialog,\r\n        private _fb: FormBuilder,\r\n        public userApi: UserApi\r\n    ) { }\r\n\r\n    edit = (user: User) => this._dialog.open(DynamicDialog, {\r\n        data: {\r\n            component: UserForm,\r\n            inputData: GenerateUserForm(user, this._fb),\r\n            dataSvc: this.userApi\r\n        },\r\n        width: '500px',\r\n        autoFocus: false,\r\n        disableClose: true\r\n    })\r\n        .afterClosed()\r\n        .subscribe(res => console.log(\"dialog output\", res));\r\n}\r\n","<user-table (edit)=\"edit($event)\"></user-table>\r\n","export * from './dynamic-component-loader.route';\r\n","import {\r\n    Component,\r\n    OnInit\r\n} from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'home-route',\r\n    templateUrl: 'home.route.html'\r\n})\r\nexport class HomeRoute implements OnInit {\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n","<p>Click a demo!!!</p>\r\n","export * from './home.route';\r\n","import { Route } from '@angular/router';\r\nimport { DynamicComponentLoaderRoute } from './dynamic-component-loader';\r\nimport { HomeRoute } from './home';\r\nimport { Demos } from '../models/consts/demos';\r\n\r\nexport const RouteComponents = [\r\n    DynamicComponentLoaderRoute,\r\n    HomeRoute\r\n];\r\n\r\nexport const Routes: Route[] = [\r\n    ...Demos.map(x => { return { path: x.name, component: x.component } }),\r\n    { path: '**', redirectTo: Demos[0].name, pathMatch: 'full' }\r\n];\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { BehaviorSubject, firstValueFrom, Observable, of, Subscription } from \"rxjs\";\r\nimport { Entity } from \"src/app/models\";\r\nimport { SnackerService } from \"../../core\";\r\n\r\nexport abstract class BaseApi<T extends Entity> {\r\n    private _entities = new BehaviorSubject<T[]>(null);\r\n    private _entity = new BehaviorSubject<T>(null);\r\n\r\n    protected api: string;\r\n\r\n    entities$ = this._entities.asObservable();\r\n    entity$ = this._entity.asObservable();\r\n\r\n    constructor(\r\n        private _http: HttpClient,\r\n        private _snacker: SnackerService,\r\n        protected address: string,\r\n        protected path: string\r\n    ) { this.api = address + path; }\r\n\r\n    storeAll = (): Subscription => this.getAll$()\r\n        .subscribe({\r\n            next: data => {\r\n                this._entities.next(data);\r\n                this._snacker.sendSuccessMessage('data successfully loaded!');\r\n            },\r\n            error: err => this._snacker.sendErrorMessage('something went wrong')\r\n        });\r\n\r\n    getAll$ = (): Observable<T[]> => this._http.get<T[]>(\r\n        `${this.api}`\r\n    );\r\n\r\n    getAllAsync = (): Promise<T[]> => firstValueFrom(\r\n        this.getAll$()\r\n    );\r\n\r\n    getById$ = (id: number): Observable<T> => this._http.get<T>(\r\n        `${this.api}/${id}`\r\n    );\r\n\r\n    getByIdAsync = (id: number): Promise<T> => firstValueFrom(\r\n        this.getById$(id)\r\n    );\r\n\r\n    save = (entity: T): Promise<T> => firstValueFrom(\r\n        of<T>(this.internalSave(entity))\r\n    );\r\n\r\n    internalSave = (entity: T): T => {\r\n        const entities = this._entities.getValue();\r\n        const index = entities.findIndex(x => x.id === entity.id);\r\n\r\n        entities.splice(index, 1, entity);\r\n        this._entities.next(entities);\r\n\r\n        return entity;\r\n    }\r\n}\r\n","import {\r\n    firstValueFrom,\r\n    Observable\r\n} from 'rxjs';\r\n\r\nimport {\r\n    Entity,\r\n    IStorage,\r\n    QuerySource,\r\n    SessionStorage,\r\n    ValidationResult\r\n} from '../../../models';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from '../../../../environments/environment';\r\nimport { QueryGeneratorService } from '../../core';\r\n\r\nexport abstract class EntityApi<T extends Entity> {\r\n    private setEndpoint = (endpoint: string): string =>\r\n        endpoint.endsWith('/')\r\n            ? endpoint\r\n            : `${endpoint}/`;\r\n\r\n    protected api: string;\r\n    protected queryUrl: string;\r\n\r\n    protected handleError = (err: any) => {\r\n        throw new Error(err);\r\n    }\r\n\r\n    constructor(\r\n        protected endpoint: string,\r\n        protected generator: QueryGeneratorService,\r\n        protected http: HttpClient\r\n    ) {\r\n        this.endpoint = this.setEndpoint(endpoint);\r\n        this.api = `${environment.api}${this.endpoint}`;\r\n        this.queryUrl = `${this.api}query`;\r\n    }\r\n\r\n    // protected base = () => <T>{\r\n    //     id: 0,\r\n    //     name: '',\r\n    //     url: ''\r\n    // }\r\n\r\n    // getBase = () => this.base();\r\n\r\n    generateStorage = (entity: T): IStorage<T> =>\r\n        new SessionStorage<T>(\r\n            entity?.id\r\n                ? `conductor-${this.endpoint}-${entity.id}`\r\n                : `conductor-${this.endpoint}-new`\r\n        );\r\n\r\n    query = (): QuerySource<T> =>\r\n        this.generator.generateSource<T>(\r\n            this.queryUrl\r\n        );\r\n\r\n    getById$ = (id: number): Observable<T> =>\r\n        this.http.get<T>(`${this.api}getById/${id}`);\r\n\r\n    getById = (id: number): Promise<T> =>\r\n        firstValueFrom(this.getById$(id));\r\n\r\n    getByUrl$ = (url: string): Observable<T> =>\r\n        this.http.get<T>(`${this.api}getByUrl/${url}`);\r\n\r\n    getByUrl = (url: string): Promise<T> =>\r\n        firstValueFrom(this.getByUrl$(url));\r\n\r\n    validateName$ = (entity: T): Observable<boolean> =>\r\n        this.http.post<boolean>(`${this.api}validateName`, entity);\r\n\r\n    validateName = (entity: T): Promise<boolean> =>\r\n        firstValueFrom(\r\n            this.validateName$(entity)\r\n        );\r\n\r\n    validate$ = (entity: T): Observable<ValidationResult> =>\r\n        this.http.post<ValidationResult>(`${this.api}validate`, entity);\r\n\r\n    validate = (entity: T): Promise<ValidationResult> =>\r\n        firstValueFrom(\r\n            this.validate$(entity)\r\n        );\r\n\r\n    save = (entity: T): Promise<T> =>\r\n        firstValueFrom(\r\n            this.http.post<T>(`${this.api}save`, entity)\r\n        );\r\n\r\n    remove = (entity: T): Promise<number> =>\r\n        firstValueFrom(\r\n            this.http.delete<number>(`${this.api}remove`, { body: entity })\r\n        );\r\n}\r\n","export * from './base.api';\r\nexport * from './entity.api';\r\n","export * from './user.api';\r\n\r\nexport * from './base';\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, firstValueFrom, Observable } from 'rxjs';\r\nimport { SnackerService } from '../core';\r\nimport { User } from 'src/app/models';\r\nimport { BaseApi } from './base';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserApi extends BaseApi<User>{\r\n    constructor(\r\n        http: HttpClient,\r\n        snacker: SnackerService\r\n    ) { super(http, snacker, 'https://jsonplaceholder.typicode.com/', 'users'); }\r\n}\r\n","import {\r\n    AbstractControl,\r\n    FormGroup\r\n} from '@angular/forms';\r\n\r\nimport {\r\n    debounceTime,\r\n    distinctUntilChanged\r\n} from 'rxjs/operators';\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ApiValidator {\r\n    private setErrorState = (control: AbstractControl, error: string, value?: boolean) => {\r\n        if (value) {\r\n            const errors = control.errors\r\n                ? {\r\n                    ...control.errors,\r\n                    [error]: value\r\n                }\r\n                : {\r\n                    [error]: value\r\n                };\r\n\r\n            control.setErrors(errors);\r\n        } else if (control.errors) {\r\n            if (control.errors.hasOwnProperty(error))\r\n                delete control.errors[error];\r\n\r\n            if (Object.keys(control.errors).length > 0)\r\n                control.setErrors(control.errors);\r\n            else\r\n                control.setErrors(null);\r\n        }\r\n    }\r\n\r\n    registerValidator = async<T>(\r\n        validator: (obj: T) => Promise<boolean>,\r\n        form: FormGroup,\r\n        control: AbstractControl,\r\n        error: string = 'api'\r\n    ): Promise<Subscription> => {\r\n        if (control.value) {\r\n            const res = await validator(form.value);\r\n            this.setErrorState(control, error, res ? null : true);\r\n        }\r\n\r\n        return control\r\n            .valueChanges\r\n            .pipe(\r\n                debounceTime(350),\r\n                distinctUntilChanged()\r\n            )\r\n            .subscribe(async (value: string) => {\r\n                if (value) {\r\n                    const res = await validator(form.value);\r\n                    this.setErrorState(control, error, res ? null : true);\r\n                } else\r\n                    this.setErrorState(control, error);\r\n            });\r\n    }\r\n}\r\n","import {\r\n  Injectable,\r\n  ElementRef\r\n} from '@angular/core';\r\n\r\nimport {\r\n  fromEvent,\r\n  Observable\r\n} from 'rxjs';\r\n\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  map\r\n} from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n  generateInputObservable = (input: ElementRef): Observable<string> =>\r\n    fromEvent(input.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(300),\r\n        map((event: any) => event.target.value),\r\n        distinctUntilChanged()\r\n      )\r\n}\r\n","export * from './api-validator.service';\r\nexport * from './core.service';\r\nexport * from './query-generator.service';\r\nexport * from './snacker.service';\r\nexport * from './theme.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SnackerService } from './snacker.service';\r\nimport { QuerySource } from '../../models';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class QueryGeneratorService {\r\n    constructor(\r\n        private http: HttpClient,\r\n        private snacker: SnackerService\r\n    ) { }\r\n\r\n    generateSource = <T>(\r\n        endpoint: string = null,\r\n        sortProperty: string = 'id',\r\n        isDescending: boolean = false,\r\n        pageSize: number = 50,\r\n        pageSizeOptions: number[] = [5, 10, 20, 50, 100]\r\n    ) => new QuerySource<T>(\r\n        this.http,\r\n        this.snacker,\r\n        endpoint,\r\n        sortProperty,\r\n        isDescending,\r\n        pageSize,\r\n        pageSizeOptions\r\n    );\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  MatSnackBar,\r\n  MatSnackBarConfig\r\n} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SnackerService {\r\n  private config = new MatSnackBarConfig();\r\n\r\n  constructor(private snackbar: MatSnackBar) {\r\n    this.config.duration = 5000;\r\n    this.config.panelClass = [];\r\n  }\r\n\r\n  private sendMessage = (message: string) => this.snackbar.open(message, 'Close', this.config);\r\n\r\n  setDuration(duration: number) {\r\n    this.config.duration = duration;\r\n  }\r\n\r\n  setClasses = (classes: string[]) => {\r\n    classes.push('snacker');\r\n    classes.push('background-card');\r\n    this.config.panelClass = classes;\r\n  }\r\n\r\n  sendColorMessage = (message: string, colors: string[]) => {\r\n    this.setClasses(colors);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendErrorMessage = (message: string) => {\r\n    this.setClasses(['snacker-red']);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendWarningMessage = (message: string) => {\r\n    this.setClasses(['snacker-orange']);\r\n    this.sendMessage(message);\r\n  }\r\n\r\n  sendSuccessMessage = (message: string) => {\r\n    this.setClasses(['snacker-green']);\r\n    this.sendMessage(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { OverlayContainer } from '@angular/cdk/overlay';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ThemeService {\r\n  isLight = true;\r\n\r\n  setOverlayContainerTheme = () => {\r\n    if (this.isLight) {\r\n      this.overlay.getContainerElement().classList.remove('app-dark');\r\n      this.overlay.getContainerElement().classList.add('app-light');\r\n    } else {\r\n      this.overlay.getContainerElement().classList.remove('app-light');\r\n      this.overlay.getContainerElement().classList.add('app-dark');\r\n    }\r\n  }\r\n\r\n  toggleTheme = () => {\r\n    this.isLight = !this.isLight;\r\n    this.setOverlayContainerTheme();\r\n  }\r\n\r\n  constructor(\r\n    private overlay: OverlayContainer\r\n  ) {\r\n    this.isLight = window.matchMedia && window.matchMedia('(prefers-color-scheme: light)').matches;\r\n\r\n    window.matchMedia('(prefers-color-scheme: light)')\r\n      .addEventListener('change', (e: MediaQueryListEvent) =>\r\n        this.isLight = e.matches\r\n      );\r\n\r\n    this.setOverlayContainerTheme();\r\n  }\r\n}\r\n","export * from './api';\r\nexport * from './core';\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  server: 'http://localhost:5000/',\r\n  api: 'http://localhost:5000/api/',\r\n  rig: 'http://localhost:5001/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["FormsModule","ReactiveFormsModule","BrowserModule","BrowserAnimationsModule","HttpClientModule","RouterModule","MaterialModule","AppComponent","Routes","AppModule","bootstrap","forRoot","declarations","i1","i2","i3","i4","i5","i6","i7","i8","i9","i10","i11","i12","i13","i14","i15","imports","i16","i0","ctx_r4","ctx_r2","query_r3","AsyncSourceComponent","constructor","selectors","inputs","src","inlineControls","searchLabel","searchMin","emptyLabel","layout","alignment","pageStyle","ngContentSelectors","decls","vars","consts","template","_r0","EventEmitter","InjectionToken","MatPaginator","MatSort","MatTableDataSource","AbstractTableComponent","BaseTableComponent","liveAnnouncer","api","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","ngOnInit","sub","entities$","subscribe","x","data","ngAfterViewInit","sort","ngOnDestroy","unsubscribe","viewQuery","ComponentRef","Type","MAT_DIALOG_DATA","DynamicComponentLoaderDirective","BaseApi","DynamicDialog","_dialogRef","outletRef","outlet","viewContainerRef","createComponent","component","instance","inputData","res","dataSvc","save","return","close","setTimeout","load","ctx","debounceTime","distinctUntilChanged","ApiValidator","control","error","errors","setErrors","hasOwnProperty","Object","keys","length","validator","form","setErrorState","valueChanges","pipe","factory","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}
